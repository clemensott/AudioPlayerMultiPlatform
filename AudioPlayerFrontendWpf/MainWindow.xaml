<Window x:Class="AudioPlayerFrontend.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:AudioPlayerFrontend"
        xmlns:con="clr-namespace:StdOttFramework.Converters;assembly=StdOttFrameworkLib"
        xmlns:sys="clr-namespace:System;assembly=mscorlib"
        xmlns:audio="clr-namespace:AudioPlayerBackend.Audio;assembly=AudioPlayerBackendLib"
        mc:Ignorable="d"
        Title="Hotkey Music"
        MinHeight="300" MinWidth="450"
        Height="650" Width="625"
        AllowDrop="True" Drop="Window_Drop"
        Loaded="Window_Loaded"
        KeyDown="Window_KeyDown"
        Closing="Window_Closing">

    <Window.Resources>
        <local:PlayStateToIsCheckedConverter x:Key="isPlayingCon"/>
        <con:TimeSpanToStringConverter x:Key="timeTextCon"/>
        <local:TimeSpanToSecondsConverter x:Key="timeSecCon"/>
        <local:IsAudioStreamPlayerConverter x:Key="isClientCon"/>
        <con:ValueConverter x:Key="playlistMenuItemVisCon" ConvertEvent="ValueConverter_ConvertEvent"/>

        <con:VisibleCollapsedConverter x:Key="visCon"/>
        <con:CollapsedVisibleConverter x:Key="colCon"/>

        <sys:Int32 x:Key="negativeOne">-1</sys:Int32>
        <sys:String x:Key="emptyString">empty</sys:String>
        <Visibility x:Key="collapsed">Collapsed</Visibility>
    </Window.Resources>

    <Grid Margin="5">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <Grid Margin="3"
              Visibility="{Binding AudioServiceUI,Converter={StaticResource visCon}}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>

            <TextBlock Text="Search:" FontWeight="Bold" Margin="0,0,5,0" VerticalAlignment="Center"/>
            <TextBox Grid.Column="1" Name="tbxSearch" Margin="0,3" HorizontalAlignment="Stretch"
                     VerticalAlignment="Center" Text="{Binding AudioServiceUI.SearchKey,
                       Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                     PreviewKeyDown="TbxSearch_PreviewKeyDown"/>

            <Grid Grid.Column="2" Margin="5,0,0,0" Width="110"
                  Visibility="{Binding AudioServiceUI.CurrentPlaylist,
                    Converter={StaticResource visCon},FallbackValue={StaticResource collapsed}}">
                <ComboBox SelectedValuePath="DataContext"
                          SelectedValue="{Binding AudioServiceUI.CurrentPlaylist.Shuffle,Mode=TwoWay}"
                          Visibility="{Binding AudioServiceUI.IsSearching,Converter={StaticResource colCon}}">
                    <ComboBoxItem>
                        <ComboBoxItem.DataContext>
                            <audio:OrderType>ByTitleAndArtist</audio:OrderType>
                        </ComboBoxItem.DataContext>
                        <ComboBoxItem.Content>Title and Artist</ComboBoxItem.Content>
                    </ComboBoxItem>
                    <ComboBoxItem>
                        <ComboBoxItem.DataContext>
                            <audio:OrderType>ByPath</audio:OrderType>
                        </ComboBoxItem.DataContext>
                        <ComboBoxItem.Content>File path</ComboBoxItem.Content>
                    </ComboBoxItem>
                    <ComboBoxItem>
                        <ComboBoxItem.DataContext>
                            <audio:OrderType>Custom</audio:OrderType>
                        </ComboBoxItem.DataContext>
                        <ComboBoxItem.Content>Shuffle</ComboBoxItem.Content>
                    </ComboBoxItem>
                </ComboBox>

                <CheckBox Margin="5,0" Content="Shuffle" VerticalAlignment="Center" HorizontalAlignment="Left"
                          IsChecked="{Binding AudioServiceUI.IsSearchShuffle,Mode=TwoWay}"
                          Visibility="{Binding AudioServiceUI.IsSearching,Converter={StaticResource visCon}}"/>
            </Grid>

            <!--<StackPanel Orientation="Horizontal" Margin="5,3" VerticalAlignment="Center"
                        Visibility="{Binding ServicePlayerUI,Converter={StaticResource isClientCon}}">
                <CheckBox Content="Stream" VerticalAlignment="Center" HorizontalAlignment="Right"
                          Margin="0,0,5,0" IsChecked="{Binding CommunicatorUI.IsStreaming,Mode=TwoWay}"/>
                <Slider Maximum="1" Value="{Binding ServicePlayerUI.Player.Volume}" Width="150" VerticalAlignment="Center"/>
            </StackPanel>-->
        </Grid>

        <Grid Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" MinWidth="230"/>
                <ColumnDefinition Width="5" />
                <ColumnDefinition Width="Auto" MinWidth="190" />
            </Grid.ColumnDefinitions>

            <con:MultipleInputs7Converter x:Name="micSongs" 
                                          Input0="{Binding AudioServiceUI.CurrentPlaylist}"
                                          Input1="{Binding AudioServiceUI.CurrentPlaylist.CurrentSong}" 
                                          Input2="{Binding AudioServiceUI.CurrentPlaylist.WannaSong,Mode=TwoWay}"
                                          Input3="{Binding AudioServiceUI.CurrentPlaylist.AllSongs}"
                                          Input4="{Binding AudioServiceUI.SearchSongs}"
                                          Input5="{Binding AudioServiceUI.IsSearching}"
                                          Input6="{StaticResource negativeOne}"
                                          ConvertRef="MicCurrentSongIndex_ConvertRef"/>

            <ListBox x:Name="lbxSongs" Margin="0,5" HorizontalAlignment="Stretch"
                     ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                     ItemsSource="{Binding ElementName=micSongs,Path=Output}"
                     SelectedIndex="{Binding ElementName=micSongs,Path=Input6,Mode=TwoWay}"
                     IsSynchronizedWithCurrentItem="True"
                     SelectionChanged="LbxSongs_SelectionChanged">
                <ListBox.ItemContainerStyle>
                    <Style TargetType="ListBoxItem">
                        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                    </Style>
                </ListBox.ItemContainerStyle>
                <ListBox.ItemTemplate>
                    <DataTemplate>
                        <Grid Margin="3">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="5"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>

                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>

                            <TextBlock Grid.RowSpan="2" TextAlignment="Center" VerticalAlignment="Center"
                                       Margin="5,0" Text="{Binding Index}"/>

                            <TextBlock Grid.Column="2" Grid.Row="0" TextWrapping="Wrap" Text="{Binding Title}"/>
                            <TextBlock Grid.Column="2" Grid.Row="1" TextWrapping="Wrap" FontStyle="Italic"
                                       Text="{Binding Artist,TargetNullValue=&lt;Unkown&gt;}"/>
                        </Grid>
                    </DataTemplate>
                </ListBox.ItemTemplate>
            </ListBox>

            <GridSplitter Grid.Column="1" Background="Transparent" 
                          HorizontalAlignment="Stretch" VerticalAlignment="Stretch"/>

            <Grid Grid.Column="2">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>

                <Grid Margin="3"
                      Visibility="{Binding AudioServiceUI,
                        Converter={StaticResource visCon},FallbackValue={StaticResource collapsed}}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>

                    <TextBlock Text="Volume:" FontWeight="Bold" HorizontalAlignment="Center"/>
                    <Slider Grid.Column="1" VerticalAlignment="Center" Margin="5,0,0,0"
                            Maximum="1" SmallChange="0.05" LargeChange="0.2"
                            Value="{Binding AudioServiceUI.Volume}" />
                </Grid>

                <ComboBox Grid.Row="1" Margin="0,5,0,0" SelectedValuePath="DataContext"
                          SelectedValue="{Binding AudioServiceUI.CurrentPlaylist.Loop,Mode=TwoWay}"
                          Visibility="{Binding AudioServiceUI.CurrentPlaylist,
                            Converter={StaticResource visCon},FallbackValue={StaticResource collapsed}}">
                    <ComboBoxItem>
                        <ComboBoxItem.DataContext>
                            <audio:LoopType>Next</audio:LoopType>
                        </ComboBoxItem.DataContext>
                        <ComboBoxItem.Content>Next playlist</ComboBoxItem.Content>
                    </ComboBoxItem>
                    <ComboBoxItem>
                        <ComboBoxItem.DataContext>
                            <audio:LoopType>Stop</audio:LoopType>
                        </ComboBoxItem.DataContext>
                        <ComboBoxItem.Content>Next playlist and stop</ComboBoxItem.Content>
                    </ComboBoxItem>
                    <ComboBoxItem>
                        <ComboBoxItem.DataContext>
                            <audio:LoopType>CurrentPlaylist</audio:LoopType>
                        </ComboBoxItem.DataContext>
                        <ComboBoxItem.Content>Repeat playlist</ComboBoxItem.Content>
                    </ComboBoxItem>
                    <ComboBoxItem>
                        <ComboBoxItem.DataContext>
                            <audio:LoopType>CurrentSong</audio:LoopType>
                        </ComboBoxItem.DataContext>
                        <ComboBoxItem.Content>Repeat current song</ComboBoxItem.Content>
                    </ComboBoxItem>
                    <ComboBoxItem>
                        <ComboBoxItem.DataContext>
                            <audio:LoopType>StopCurrentSong</audio:LoopType>
                        </ComboBoxItem.DataContext>
                        <ComboBoxItem.Content>Next song and stop</ComboBoxItem.Content>
                    </ComboBoxItem>
                </ComboBox>

                <con:MultipleInputs4Converter x:Name="micPlaylists"
                                              DataContext="{Binding AudioServiceUI}"
                                              Input0="{Binding SourcePlaylists}"
                                              Input1="{Binding Playlists}"
                                              Input2="{Binding CurrentPlaylist,Mode=TwoWay}"
                                              ConvertRef="MicPlaylists_Convert"/>

                <ListBox Grid.Row="2" x:Name="lbxPlaylists" Margin="0,5" SelectionMode="Single"
                         ItemsSource="{Binding ElementName=micPlaylists,Path=Output}"
                         SelectedItem="{Binding ElementName=micPlaylists,Path=Input3,Mode=TwoWay}">
                    <ListBox.ItemContainerStyle>
                        <Style TargetType="ListBoxItem">
                            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                        </Style>
                    </ListBox.ItemContainerStyle>
                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <StackPanel Margin="0,3">
                                <TextBlock FontWeight="SemiBold" FontSize="17"
                                               TextWrapping="Wrap" Text="{Binding Name}"/>

                                <StackPanel Orientation="Horizontal">
                                    <TextBlock Text="Songs: "/>
                                    <TextBlock Text="{Binding Songs.Length}"/>
                                </StackPanel>

                                <StackPanel.ContextMenu>
                                    <ContextMenu>
                                        <MenuItem Name="mimReloadSongs" Header="Reload songs"
                                                  Visibility="{Binding Type,Converter={StaticResource playlistMenuItemVisCon}}"
                                                  Click="MimReloadSongs_Click"/>
                                        <Separator Name="sprUpdatePlaylist"
                                                  Visibility="{Binding Type,Converter={StaticResource playlistMenuItemVisCon}}"/>
                                        <MenuItem Header="Remix songs" Click="MimRemixSongs_Click"/>
                                        <MenuItem Header="Remove" Click="MimRemovePlaylist_Click"/>
                                    </ContextMenu>
                                </StackPanel.ContextMenu>
                            </StackPanel>
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                </ListBox>

                <StackPanel Grid.Row="3" Orientation="Horizontal" HorizontalAlignment="Right" Margin="0,0,0,5">
                    <CheckBox Margin="5" Content="Enable UI" VerticalAlignment="Center" 
                              IsChecked="{Binding IsUiEnabled,Mode=TwoWay}"/>

                    <Button Grid.Row="1" Margin="5,0" Content="Settings"
                            Width="100" Click="BtnSettings_Click"/>
                </StackPanel>
            </Grid>
        </Grid>

        <Grid Grid.Row="2">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>

            <Grid Grid.ColumnSpan="2" Margin="0,0,0,5"
                  DataContext="{Binding AudioServiceUI.CurrentPlaylist}"
                  Visibility="{Binding Converter={StaticResource visCon}}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>

                <TextBlock Grid.Column="0" Margin="5,0" VerticalAlignment="Center"
                           Text="{Binding Position,Converter={StaticResource timeTextCon}}"/>
                <Slider Grid.Column="1" Minimum="0" VerticalAlignment="Center" IsMoveToPointEnabled="True"
                        Value="{Binding Position,Mode=OneWay,Converter={StaticResource timeSecCon}}"
                        Maximum="{Binding Duration,Converter={StaticResource timeSecCon}}"
                        ValueChanged="SldPosition_ValueChanged"/>
                <TextBlock Grid.Column="2" Margin="5,0" VerticalAlignment="Center"
                           Text="{Binding Duration,Converter={StaticResource timeTextCon}}"/>
            </Grid>

            <Grid Grid.Row="1" MinHeight="32">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>

                <Button Grid.Column="0" Content="Previous" Width="75" Click="OnPrevious"/>
                <ToggleButton Grid.Column="1" Content="Play/Pause" Margin="5,0" Width="75"
                              IsChecked="{Binding Service.AudioService.PlayState,Mode=TwoWay,
                                Converter={StaticResource ResourceKey=isPlayingCon}}" />
                <Button Grid.Column="2" Content="Next" Width="75" Click="OnNext"/>

                <StackPanel Grid.Column="3" VerticalAlignment="Center"
                            DataContext="{Binding AudioServiceUI.CurrentPlaylist.CurrentSong}" 
                            Visibility="{Binding Converter={StaticResource visCon}}"
                            MouseLeftButtonDown="StpCurrentSong_MouseLeftButtonDown"
                            MouseRightButtonUp="StackPanel_MouseRightButtonUp">
                    <TextBlock TextWrapping="Wrap" FontWeight="SemiBold" Margin="10,0,0,0" Text="{Binding Title}"/>
                    <TextBlock TextWrapping="Wrap" FontStyle="Italic" Margin="10,0,0,0" Text="{Binding Artist}"
                               Visibility="{Binding Artist,Converter={StaticResource visCon}}"/>
                </StackPanel>
            </Grid>
        </Grid>
    </Grid>
</Window>
